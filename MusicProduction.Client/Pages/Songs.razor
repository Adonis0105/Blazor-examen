@page "/songs"
@using MusicProduction.Client.Models
@using MusicProduction.Client.Services
@inject IMusicService MusicService

<h3>Chansons</h3>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h4>Nouvelle Chanson</h4>
            </div>
            <div class="card-body">
                <EditForm Model="@newSong" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label>Titre:</label>
                        <InputText @bind-Value="newSong.Title" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label>Artiste:</label>
                        <InputText @bind-Value="newSong.Artist" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label>Dur�e (minutes:secondes):</label>
                        <InputText @bind-Value="durationString" class="form-control" />
                    </div>



                    <button type="submit" class="btn btn-primary mt-3">Ajouter</button>
                </EditForm>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h4>Liste des Chansons</h4>
            </div>
            <div class="card-body">
                @if (songs == null)
                {
                    <p>Chargement...</p>
                }
                else if (!songs.Any())
                {
                    <p>Aucune chanson trouv�e.</p>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Titre</th>
                                    <th>Artiste</th>
                                    <th>Dur�e</th>
                                    <th>Album</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var song in songs)
                                {
                                    <tr>
                                        <td>@song.Title</td>
                                        <td>@song.Artist</td>
                                        <td>@song.Duration.ToString(@"mm\:ss")</td>
                                        <td>@(song.Album?.Title ?? "-")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private IEnumerable<Song> songs;
    private IEnumerable<Album> albums;
    private Song newSong = new();
    private string durationString = "00:00";

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        songs = await MusicService.GetSongs();
        albums = await MusicService.GetAlbums();
    }

    private async Task HandleValidSubmit()
    {
        var parts = durationString.Split(':');
        if (parts.Length == 2 && int.TryParse(parts[0], out int minutes) && int.TryParse(parts[1], out int seconds))
        {
            newSong.Duration = new TimeSpan(0, minutes, seconds);
            await MusicService.CreateSong(newSong);
            await LoadData();
            newSong = new();
            durationString = "00:00";
        }
    }
}

